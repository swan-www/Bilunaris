// auto generated by c2z
#include <new>

#include "../../../../../dep/ztf/src/dep/common/tfalias/Common_3/Application/Interfaces/IFont.h"

extern "C" bool _1_initFontSystem_(FontSystemDesc* pDesc) { return ::initFontSystem(pDesc); }
extern "C" void _1_exitFontSystem_() { ::exitFontSystem(); }
extern "C" void _1_loadFontSystem_(const FontSystemLoadDesc* pDesc) { ::loadFontSystem(pDesc); }
extern "C" void _1_unloadFontSystem_(ReloadType unloadType) { ::unloadFontSystem(unloadType); }
extern "C" void _1_cmdDrawTextWithFont_(Cmd* pCmd, float x, float y, const FontDrawDesc* pDrawDesc)
{
    float2 screenCoordsInPx = { x, y };
    ::cmdDrawTextWithFont(pCmd, screenCoordsInPx, pDrawDesc);
}
extern "C" void _1_cmdDrawWorldSpaceTextWithFont_(Cmd* pCmd, const mat4* pMatWorld, const CameraMatrix* pMatProjView,
                                                  const FontDrawDesc* pDrawDesc)
{
    ::cmdDrawWorldSpaceTextWithFont(pCmd, pMatWorld, pMatProjView, pDrawDesc);
}
extern "C" void _1_cmdDrawDebugFontAtlas_(Cmd* pCmd, float2 screenCoordsInPx) { ::cmdDrawDebugFontAtlas(pCmd, screenCoordsInPx); }
extern "C" void _1_fntDefineFonts_(const FontDesc* pDescs, uint32_t count, uint32_t* pOutIDs) { ::fntDefineFonts(pDescs, count, pOutIDs); }
extern "C" int2 _1_fntGetFontAtlasSize_() { return ::fntGetFontAtlasSize(); }
extern "C" void _1_fntResetFontAtlas_(int2 newAtlasSize) { ::fntResetFontAtlas(newAtlasSize); }
extern "C" void _1_fntExpandAtlas_(int2 additionalSize) { ::fntExpandAtlas(additionalSize); }
extern "C" float2 _1_fntMeasureFontText_(const char* pText, const FontDrawDesc* pDrawDesc)
{
    return ::fntMeasureFontText(pText, pDrawDesc);
}
